import time
import telebot
import os
from dotenv import load_dotenv
import messages.bonuses as bonuses
import messages.info as info
import messages.register as register

from telebot import types

dotenv_path = os.path.join(os.path.dirname(__file__), ".env")
if os.path.exists(dotenv_path):
    load_dotenv(dotenv_path)

BotToken = os.getenv("TOKEN")
bot = telebot.TeleBot(BotToken)
opened = [0]
op = 0
manager_reply = False
reply_to_client = False
client_id_input = False
reply_client_chat_id = None
admin_ids = ['5513975267']
tabs_dict = {0: 'main',
             1: 'reg',
             2: 'info',
             3: 'bonus',
             21: 'conditions',
             22: 'how_reg',
             23: 'payments',
             24: 'slot',
             40: 'question'}
 
@bot.message_handler(commands=['start'])
def welcome(message):
        markup = types.InlineKeyboardMarkup(row_width=1)
        item1 = types.InlineKeyboardButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è ‚úÖ", callback_data='reg')
        item2 = types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ FAQ ‚ùì", callback_data='info')
        item3 = types.InlineKeyboardButton("–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –±–æ–Ω—É—Å—ã üéÅ", callback_data='bonus')

        markup.add(item1).add(item2).add(item3)
        bot.send_message(message.chat.id, f"<b>–ü—Ä–∏–≤–µ—Ç!üëã –Ø –±–æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ –Ø–Ω–¥–µ–∫—Å.–ï–¥–∞!</b>\n\n–°–µ–π—á–∞—Å –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ø–æ–∏—Å–∫–µ <b>–∫–æ–º–∞–Ω–¥—ã –∫—É—Ä—å–µ—Ä–æ–≤!</b>üèÉ‚Äç\n\n–ü–ª–∞–Ω–∏—Ä—É–µ—à—å –Ω–∞–∫–æ–ø–∏—Ç—å –Ω–∞ —Å–≤–æ—é <b>–º–µ—á—Ç—É</b>, –Ω–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ–¥–æ–±—Ä–∞—Ç—å —É–¥–æ–±–Ω—ã–π <b>–∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞?</b>üí∞\n\n–¢–æ–≥–¥–∞ –±—ã—Å—Ç—Ä–µ–µ –æ–∑–Ω–∞–∫–∞–º–ª–∏–≤–∞–π—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ <b>—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è</b> –≤ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ!üßë‚Äçüíª".format(message.from_user, bot.get_me()), parse_mode = 'html',  reply_markup=markup)
       

@bot.message_handler(content_types=['text'])
def lalala(message):
    global manager_reply, reply_to_client, reply_client_chat_id, client_id_input

    if message.chat.type == 'private':
        if (manager_reply == True and reply_to_client == False):
            for i in admin_ids:
                bot.send_message(i, f'<b>–ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–∞—Ä—Ç–Ω–µ—Ä–∫–∏:</b>\n\n@{message.chat.id}'.format(message.from_user, bot.get_me()), parse_mode = 'html')
                bot.forward_message(i, message.chat.id, message.message_id)
            
                markupAdmin = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("–î–∞",  callback_data='reply_to_client_username')
                markupAdmin.add(item1)
                bot.send_message(i, f'–û—Ç–≤–µ—Ç–∏—Ç—å?'.format(message.from_user, bot.get_me()), parse_mode = 'html', reply_markup=(markupAdmin))
            
            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é",  callback_data='main')
            markup.add(item1)
            bot.send_message(message.chat.id, 'üì§ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –±—ã–ª–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç'.format(message.from_user, bot.get_me()), parse_mode = 'html', reply_markup=(markup))


        elif (client_id_input == True and manager_reply == False and reply_to_client == False):
            if(any(c.isalpha() for c in message.text[1:]) or any(c.isalpha() for c in message.text)):
                bot.send_message(message.chat.id, f'<b>‚ùóÔ∏è–û—à–∏–±–∫–∞‚ùóÔ∏è<\b>\n\n'.format(message.from_user, bot.get_me()), parse_mode = 'html')
                client_id_input = False
            else:
                if((message.text).find("@") == 0):
                    reply_client_chat_id = message.text[1:]
                else:
                    reply_client_chat_id = message.text
           
                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data='delete')
                reply_to_client = True

                markup.add(item1)
                bot.send_message(message.chat.id, f'–í–∞—à –û—Ç–≤–µ—Ç:'.format(message.from_user, bot.get_me()), parse_mode = 'html', reply_markup=markup)
            

        elif (client_id_input == True and reply_to_client == True and manager_reply == False):
           
            try:
                bot.send_message(reply_client_chat_id, f'<b>üì¨ –í–∞–º –ø–æ—Å—Ç—É–ø–∏–ª –æ—Ç–≤–µ—Ç –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞:</b>\n\n{message.text}', parse_mode = 'html')
                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é",  callback_data='main')
                markup.add(item1)
                bot.send_message(reply_client_chat_id, f'‚¨á–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é‚¨á', parse_mode = 'html', reply_markup=markup)
            except:
                bot.send_message(message.chat.id, f'<b>‚ùóÔ∏è–û—à–∏–±–∫–∞‚ùóÔ∏è<\b>\n\n'.format(message.from_user, bot.get_me()), parse_mode = 'html')
            finally:
                bot.send_message(message.chat.id, f'–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!'.format(message.from_user, bot.get_me()), parse_mode = 'html')
                reply_to_client = False
                client_id_input = False
                

        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')
            time.sleep(2)
            bot.delete_message(message.chat.id, message.id+1)

 
def check_back():
    global opened, tabs_dict
    
    if(opened[-1] == 1 or opened[-1] == 3 or opened[-1] == 2 or opened[-1] == 40):
        return tabs_dict[opened[-2]]
    elif(opened[-1] == 21 or opened[-1] == 22 or opened[-1] == 23 or opened[-1] == 24):
        return tabs_dict[2]

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    global op, manager_reply, reply_to_client, client_id_input, opened
    manager_reply = False
    reply_to_client = False
    client_id_input = False
    try:
        if call.message:
            if call.data == 'main':
                if(opened[-1] > 0):
                        opened.pop(-1)
                #bot.send_message(call.message.chat.id, f'{opened}'.format(call.message.from_user, bot.get_me()), parse_mode = 'html')
                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è ‚úÖ", callback_data='reg')
                item2 = types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ FAQ ‚ùì", callback_data='info')
                item3 = types.InlineKeyboardButton("–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –±–æ–Ω—É—Å—ã üéÅ", callback_data='bonus')

                markup.add(item1).add(item2).add(item3)
                bot.edit_message_text(chat_id = call.message.chat.id, text = f"<b>–ü—Ä–∏–≤–µ—Ç!üëã –Ø –±–æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ –Ø–Ω–¥–µ–∫—Å.–ï–¥–∞!</b>\n\n–°–µ–π—á–∞—Å –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ø–æ–∏—Å–∫–µ <b>–∫–æ–º–∞–Ω–¥—ã –∫—É—Ä—å–µ—Ä–æ–≤!</b>üèÉ‚Äç\n\n–ü–ª–∞–Ω–∏—Ä—É–µ—à—å –Ω–∞–∫–æ–ø–∏—Ç—å –Ω–∞ —Å–≤–æ—é <b>–º–µ—á—Ç—É</b>, –Ω–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ–¥–æ–±—Ä–∞—Ç—å —É–¥–æ–±–Ω—ã–π <b>–∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞?</b>üí∞\n\n–¢–æ–≥–¥–∞ –±—ã—Å—Ç—Ä–µ–µ –æ–∑–Ω–∞–∫–∞–º–ª–∏–≤–∞–π—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ <b>—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è</b> –≤ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ!üßë‚Äçüíª".format(call.message.from_user, bot.get_me()), message_id = call.message.message_id, parse_mode = 'html',  reply_markup=markup)
                    

            elif call.data == "reg":
                    if(opened[-1] > 1):
                        opened.pop(-1)
                    if(1 not in opened):
                        opened.append(1)
                    #bot.send_message(call.message.chat.id, f'{opened}'.format(call.message.from_user, bot.get_me()), parse_mode = 'html')
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚úÖ", url=register.LINK)
                    item2 = types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ FAQ ‚ùì", callback_data='info')
                    item3 = types.InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data=check_back())
                    markup.add(item1, item2, item3)
                    op = 1
                    #bot.edit_message_text("–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫—É—Ä—å–µ—Ä–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ (–ï—Å–ª–∏ –≤—ã —ç—Ç–æ–≥–æ –µ—â–µ –Ω–µ —Å–¥–µ–ª–∞–ª–∏) –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–Ω–æ–ø–∫–µ –≤–Ω–∏–∑—É\n\n‚ùó–í–ù–ò–ú–ê–ù–ò–ï‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–æ –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º.\n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ - –ª—É—á—à–µ –Ω–∞—á–Ω–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞\n\n–ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ!üòä", call.message.chat.id, call.message.message_id, parse_mode = 'html', reply_markup=markup)
                    
                    bot.edit_message_text(chat_id = call.message.chat.id, text = f"<b>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è ‚úÖ</b>\n\n–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫—É—Ä—å–µ—Ä–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:\n\n  1. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å <b>–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏</b> (–ï—Å–ª–∏ –≤—ã —ç—Ç–æ–≥–æ –µ—â–µ –Ω–µ —Å–¥–µ–ª–∞–ª–∏)\n\n  2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ <b>–∫–Ω–æ–ø–∫–µ –≤–Ω–∏–∑—É‚¨á</b>\n\n<i>‚ùó–í–ù–ò–ú–ê–ù–ò–ï‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–æ –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º.\n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ - –ª—É—á—à–µ –Ω–∞—á–Ω–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å <b>—Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞</b></i>\n\n  –ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ!üòä".format(call.message.from_user, bot.get_me()), message_id=call.message.message_id, parse_mode = 'html', reply_markup=(markup))
                    

            elif call.data == 'info':   
                    if(opened[-1] > 2):
                        opened.pop(-1)
                    if(2 not in opened):
                        opened.append(2)        
                    #bot.send_message(call.message.chat.id, f'{opened}'.format(call.message.from_user, bot.get_me()), parse_mode = 'html')
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton("–ß—Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º?", callback_data='conditions')
                    item2 = types.InlineKeyboardButton("–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è?", callback_data='how_reg')
                    item3 = types.InlineKeyboardButton("–í—ã–ø–ª–∞—Ç—ã", callback_data='payments')
                    item4 = types.InlineKeyboardButton("–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–ª–æ—Ç?", callback_data='slot')
                    item5 = types.InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data='question')
                    item6 = types.InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data=check_back())
 
                    markup.add(item1, item2, item3, item4, item5, item6)
                   
                    bot.edit_message_text(chat_id = call.message.chat.id, text = f'<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ FAQ ‚ùì</b>\n\n–ü–∞—Ä—Ç–Ω–µ—Ä —Å–µ—Ä–≤–∏—Å–∞ –Ø–Ω–¥–µ–∫—Å.–ï–¥–∞ –≤ –ø–æ–∏—Å–∫–∞—Ö <b>–∫–æ–º–∞–Ω–¥—ã –∫—É—Ä—å–µ—Ä–æ–≤!</b>\n\n‚ûñ –•–æ—á–µ—à—å —Å–∞–º –≤—ã–±–∏—Ä–∞—Ç—å <b>–≤—Ä–µ–º—è –∏ –ª–æ–∫–∞—Ü–∏–∏</b> –¥–ª—è –¥–æ—Å—Ç–∞–≤–æ–∫?üïì\n\n‚ûñ –•–æ—á–µ—à—å –∏–º–µ—Ç—å –≤—ã–ø–ª–∞—Ç—ã –¥–æ 3400 —Ä—É–±–ª–µ–π –≤ –¥–µ–Ω—å?üí∞\n\n‚ûñ –£ —Ç–µ–±—è –µ—Å—Ç—å –≥–∞–¥–∂–µ—Ç –Ω–∞ –±–∞–∑–µ Android 7 –∏ –≤—ã—à–µ?üì±\n\n<b>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –ø–∞—Ä—Ç–Ω–µ—Ä—É —Å–µ—Ä–≤–∏—Å–∞ –Ø–Ω–¥–µ–∫—Å.–ï–¥–∞!</b>\n\n<i>–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ó–ê–î–ê–¢–¨ –í–û–ü–†–û–° –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º</i>'.format(call.message.from_user, bot.get_me()), message_id=call.message.message_id, parse_mode = 'html', reply_markup=markup)
                

            elif call.data == 'bonus':
                    if(opened[-1] > 3):
                        opened.pop(-1)
                    if(3 not in opened):
                        opened.append(3)  
                    #bot.send_message(call.message.chat.id, f'{opened}'.format(call.message.from_user, bot.get_me()), parse_mode = 'html')
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data=check_back())
 
                    markup.add(item1)
                   
                    bot.edit_message_text(chat_id = call.message.chat.id, text = f"<b>–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –±–æ–Ω—É—Å—ã üéÅ</b>\n\n" + bonuses.NONE.format(call.message.from_user, bot.get_me()), message_id=call.message.message_id, parse_mode = 'html', reply_markup=markup)
                    
            
            elif call.data == 'conditions':
                #bot.delete_message(call.message.chat.id, call.message.id)
                if(opened[-1] > 21):
                        opened.pop(-1)
                if(21 not in opened):
                    opened.append(21)  
                #bot.send_message(call.message.chat.id, f'{opened}'.format(call.message.from_user, bot.get_me()), parse_mode = 'html')
                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data='question')
                item2 = types.InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data=check_back())
                
                markup.add(item1, item2)
            
                bot.edit_message_text(chat_id = call.message.chat.id, text = f'<b>–ß—Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º?</b>\n\nüî∏–ì–∏–±–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Å–∞–º –≤—ã–±–∏—Ä–∞–µ—à—å –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤\nüî∏–£–¥–æ–±–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ –≤ —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ\nüî∏–Ø—Ä–∫—É—é –∂–µ–ª—Ç—É—é –æ–¥–µ–∂–¥—É\nüî∏–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–≤–º–µ—â–∞—Ç—å —Å –¥—Ä—É–≥–æ–π —Ä–∞–±–æ—Ç–æ–π –∏–ª–∏ —É—á–µ–±–æ–π\nüî∏–ü–µ—Ä–≤–∞—è –≤—ã–ø–ª–∞—Ç–∞ –ø–æ—Å—Ç—É–ø–∞–µ—Ç —á–µ—Ä–µ–∑ –¥–≤–µ –Ω–µ–¥–µ–ª–∏, –¥–∞–ª–µ–µ –¥–ª—è —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã—Ö, –≤—ã–ø–ª–∞—Ç—ã –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ\n\n  <b>–õ—é–¥–∏ –≤ –∂–µ–ª—Ç–æ–º –∂–¥—É—Ç —Ç–µ–±—è!</b>\n\n<i>–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ó–ê–î–ê–¢–¨ –í–û–ü–†–û–° –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º</i>'.format(call.message.from_user, bot.get_me()), message_id=call.message.message_id, parse_mode = 'html', reply_markup=markup)
                

            elif call.data == 'how_reg':
                #bot.delete_message(call.message.chat.id, call.message.id)
                if(opened[-1] > 22):
                        opened.pop(-1)
                if(22 not in opened):
                    opened.append(22) 
                #bot.send_message(call.message.chat.id, f'{opened}'.format(call.message.from_user, bot.get_me()), parse_mode = 'html')
                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data='question')
                item2 = types.InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data=check_back())
                
                markup.add(item1, item2)
            
                bot.edit_message_text(chat_id = call.message.chat.id, text = f'<b>–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è?</b>\n\n1. –í—ã <b>–ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µüîó</b> –∏ –ø–æ–ø–∞–¥–∞–µ—Ç–µ –Ω–∞ —Å–∞–π—Ç —Å —Ñ–æ—Ä–º–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏‚úè\n\n2. <b>–ó–∞–ø–æ–ª–Ω—è–µ—Ç–µ</b> —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏üìù\n\n3. –ü—Ä–æ—Ö–æ–¥–∏—Ç–µ –Ω–µ–±–æ–ª—å—à–æ–π <b>—Ç–µ—Å—Ç-–æ–±—É—á–µ–Ω–∏–µüìö</b>\n\n4. –î–∞–ª–µ–µ 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞:\n    –∞) –í–∞—Å <b>–∑–∞–ø–∏—Å—ã–≤–∞—é—Ç –≤ –æ—Ñ–∏—Å</b> –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏ –≤—ã–¥–∞—á–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è üßë‚Äçüè´\n    –±) –í–∞—Å <b>–ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –≤ –ø–∞–º—è—Ç–∫—É</b>, –≥–¥–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é—Ç –∫–∞–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –ø—Ä–æ–π—Ç–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—éüìÑ\n\n<b>–≠—Ç–∏ 4 –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞ –ø–æ–∑–≤–æ–ª—è—Ç –≤–∞–º —Å—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ –Ø–Ω–¥–µ–∫—Å.–ï–¥–∞. –£–¥–∞—á–∏!‚ò∫</b>\n\n<i>–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ó–ê–î–ê–¢–¨ –í–û–ü–†–û–° –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º</i>'.format(call.message.from_user, bot.get_me()),  message_id=call.message.message_id, parse_mode = 'html', reply_markup=markup)
                

            elif call.data == 'payments':
                if(opened[-1] > 23):
                        opened.pop(-1)
                if(23 not in opened):
                    opened.append(23) 
                #bot.send_message(call.message.chat.id, f'{opened}'.format(call.message.from_user, bot.get_me()), parse_mode = 'html')
                #bot.delete_message(call.message.chat.id, call.message.id)
                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data='question')
                item2 = types.InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data=check_back())
                
                markup.add(item1, item2)
               
                bot.edit_message_text(chat_id = call.message.chat.id, text = f'<b>–í—ã–ø–ª–∞—Ç—ã</b>\n\nüá∑üá∫–î–ª—è –≥–æ—Ä–æ–¥–æ–≤ –†–§ ‚Äì –¥–æ 3400 —Ä—É–±\nüá∞üáø–î–ª—è –≥–æ—Ä–æ–¥–æ–≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ ‚Äì –¥–æ 9600 —Ç–µ–Ω–≥–µ\n\nüíµ–í—ã–ø–ª–∞—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –∏–ª–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞, —Ñ–æ—Ä–º—ã –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤\n\n<i>–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ó–ê–î–ê–¢–¨ –í–û–ü–†–û–° –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º</i>'.format(call.message.from_user, bot.get_me()), message_id=call.message.message_id, parse_mode = 'html', reply_markup=markup)
                

            elif call.data == 'slot':
                if(opened[-1] > 24):
                        opened.pop(-1)
                if(24 not in opened):
                    opened.append(24) 
                #bot.send_message(call.message.chat.id, f'{opened}'.format(call.message.from_user, bot.get_me()), parse_mode = 'html')
                #bot.delete_message(call.message.chat.id, call.message.id)
                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data='question')
                item2 = types.InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data=check_back())
                
                markup.add(item1, item2)
                
                bot.edit_message_text(chat_id = call.message.chat.id, text = f'<b>–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–ª–æ—Ç?</b>\n\nüìÜ –°–ª–æ—Ç - —ç—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫, –≤ –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É. –ò–∑ —Å–ª–æ—Ç–æ–≤ –≤—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n\n<i>–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ó–ê–î–ê–¢–¨ –í–û–ü–†–û–° –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º</i>'.format(call.message.from_user, bot.get_me()), message_id=call.message.message_id, parse_mode = 'html', reply_markup=markup)
                

            elif call.data == 'question':
                #bot.delete_message(call.message.chat.id, call.message.id)
                if(opened[-1] > 40):
                        opened.pop(-1)
                if(40 not in opened):
                    opened.append(40) 
                #bot.send_message(call.message.chat.id, f'{opened}'.format(call.message.from_user, bot.get_me()), parse_mode = 'html')
                manager_reply = True
                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data=check_back())
                
                markup.add(item1)
               
                bot.edit_message_text(chat_id = call.message.chat.id, text = f'<b>–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</b>\n\nüì¢ –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É. –û–Ω –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫:'.format(call.message.from_user, bot.get_me()), message_id=call.message.message_id, parse_mode = 'html', reply_markup=markup)
                
            elif call.data == 'reply_to_client_username':

                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data='delete')
                client_id_input = True

                markup.add(item1)
                bot.send_message(call.message.chat.id, f'‚úÖ –í–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:'.format(call.message.from_user, bot.get_me()), parse_mode = 'html', reply_markup=markup)
            
            elif call.data == 'start':
                bot.send_message(call.message.chat.id, f'–ù–∞–∂–º–∏—Ç–µ /start'.format(call.message.from_user, bot.get_me()), parse_mode = 'html')
            
            elif call.data == 'delete':
                bot.delete_message(call.message.chat.id, call.message.id)



            
            # remove inline buttons
            #bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ª–æ–ª", reply_markup=None)
 
            # show alert
            #bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")
 
    except Exception as e:
        print(repr(e))

# RUN
bot.polling(none_stop=True)
